PROJECT(LexRisLogic CXX)
CMAKE_MINIMUM_REQUIRED(VERSION 3.1)

option(INSTALL_ALLEGRO "INSTALL_ALLEGRO" ON)
option(INSTALL_ENET "INSTALL_ENET" ON)
option(INSTALL_IRRKLANG "INSTALL_IRRKLANG" ON)

set(CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)

SET(CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/cmake/")
if (UNIX AND NOT WIN32)
	if (CMAKE_SIZEOF_VOID_P MATCHES "8")
		SET(architecture_found_64 "-- x86_64 founded")
		MESSAGE(${architecture_found_64})
		SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -m64")
	endif (CMAKE_SIZEOF_VOID_P MATCHES "8")
endif (UNIX AND NOT WIN32)
if(WIN32)
	ADD_DEFINITIONS(-DLL_BUILD_DLL)
endif (WIN32)

if(INSTALL_ENET)
	FIND_PACKAGE(ENet REQUIRED)
endif (INSTALL_ENET)

if(INSTALL_IRRKLANG)
	FIND_PACKAGE(irrKlang REQUIRED)
endif(INSTALL_IRRKLANG)

if(INSTALL_ALLEGRO)
	FIND_PACKAGE(AllegroMono)
	if(NOT ALLEGROMONO_FOUND)
		FIND_PACKAGE(Allegro5.2 REQUIRED)
		MESSAGE(-- -- ${ALLEGRO_LIBRARY})
		MESSAGE(-- -- ${ALLEGRO_LIBRARY_ACODEC})
		MESSAGE(-- -- ${ALLEGRO_LIBRARY_AUDIO})
		MESSAGE(-- -- ${ALLEGRO_LIBRARY_COLOR})
		MESSAGE(-- -- ${ALLEGRO_LIBRARY_DIALOG})
		MESSAGE(-- -- ${ALLEGRO_LIBRARY_FONT})
		MESSAGE(-- -- ${ALLEGRO_LIBRARY_IMAGE})
		MESSAGE(-- -- ${ALLEGRO_LIBRARY_MAIN})
		MESSAGE(-- -- ${ALLEGRO_LIBRARY_MEMFILE})
		MESSAGE(-- -- ${ALLEGRO_LIBRARY_PHYSFS})
		MESSAGE(-- -- ${ALLEGRO_LIBRARY_PRIMITIVES})
		MESSAGE(-- -- ${ALLEGRO_LIBRARY_TTF})
		MESSAGE(-- -- ${ALLEGRO_LIBRARY_VIDEO})
	endif (NOT ALLEGROMONO_FOUND)
endif(INSTALL_ALLEGRO)

#LL Library
	FILE(GLOB LL_SRC 
		"src/*.cpp"
	)
	ADD_LIBRARY(LL SHARED ${LL_SRC})
	SET_PROPERTY(TARGET LL PROPERTY SOVERSION 2.0)
	INSTALL(TARGETS LL RUNTIME DESTINATION "bin" LIBRARY DESTINATION "lib")

#LL_MathStructure Library
	FILE(GLOB LL_MATHSTRUCTURE_SRC
		"src/MathStructures/*.cpp"
	)
	ADD_LIBRARY(LL_MathStructure SHARED ${LL_MATHSTRUCTURE_SRC})
	SET_PROPERTY(TARGET LL_MathStructure PROPERTY SOVERSION 2.0)
	INSTALL(TARGETS LL_MathStructure RUNTIME DESTINATION "bin" LIBRARY DESTINATION "lib")

#LL_SparseMatrix Library
	FILE(GLOB LL_SPARSEMATRIX_SRC
		"src/DataStructures/SparseMatrix.cpp"
	)
	ADD_LIBRARY(LL_SparseMatrix SHARED ${LL_SPARSEMATRIX_SRC})
	SET_PROPERTY(TARGET LL_SparseMatrix PROPERTY SOVERSION 2.0)
	INSTALL(TARGETS LL_SparseMatrix RUNTIME DESTINATION "bin" LIBRARY DESTINATION "lib")

#LL_RTree Library
	FILE(GLOB LL_RTREE_SRC
		"src/DataStructures/RTree.cpp"
		"src/MathStructures/Point.cpp"
	)
	ADD_LIBRARY(LL_RTree SHARED ${LL_RTREE_SRC})
	SET_PROPERTY(TARGET LL_RTree PROPERTY SOVERSION 2.0)
	INSTALL(TARGETS LL_RTree RUNTIME DESTINATION "bin" LIBRARY DESTINATION "lib")

#LL_irrKlang Library
if(INSTALL_IRRKLANG)
	FILE(GLOB LL_IRRKLANG_SRC
		"src/irrKlang/*.cpp"
	)
	ADD_LIBRARY(LL_irrKlang SHARED ${LL_IRRKLANG_SRC})
	TARGET_INCLUDE_DIRECTORIES(LL_irrKlang PUBLIC ${IRRKLANG_INCLUDE_DIRS})
	TARGET_LINK_LIBRARIES(LL_irrKlang ${IRRKLANG_LIBRARIES})
	SET_PROPERTY(TARGET LL_irrKlang PROPERTY SOVERSION 2.0)
	INSTALL(TARGETS LL_irrKlang RUNTIME DESTINATION "bin" LIBRARY DESTINATION "lib")
endif(INSTALL_IRRKLANG)

#LL_ENet Library
if(INSTALL_ENET)
	FILE(GLOB LL_ENET_SRC
		"src/ENet/*.cpp"
	)
	ADD_LIBRARY(LL_ENet SHARED ${LL_ENET_SRC})
	TARGET_INCLUDE_DIRECTORIES(LL_ENet PUBLIC ${ENET_INCLUDE_DIRS})
	TARGET_LINK_LIBRARIES(LL_ENet ${ENET_LIBRARIES})
	SET_PROPERTY(TARGET LL_ENet PROPERTY SOVERSION 2.0)
	INSTALL(TARGETS LL_ENet RUNTIME DESTINATION "bin" LIBRARY DESTINATION "lib")
endif(INSTALL_ENET)

#LL_Allegro5 Library
if(INSTALL_ALLEGRO)
	FILE(GLOB_RECURSE LL_ALLEGRO_SRC
		"src/Allegro5/*.cpp"
	)
	ADD_LIBRARY(LL_Allegro5 SHARED ${LL_ALLEGRO_SRC})
	TARGET_INCLUDE_DIRECTORIES(LL_Allegro5 PUBLIC ${ALLEGRO_INCLUDE_DIRS})
	TARGET_LINK_LIBRARIES(LL_Allegro5 ${ALLEGRO_LIBRARY})
	if(NOT ALLEGROMONO_FOUND)
		TARGET_LINK_LIBRARIES(LL_Allegro5 ${ALLEGRO_LIBRARY_ACODEC})
		TARGET_LINK_LIBRARIES(LL_Allegro5 ${ALLEGRO_LIBRARY_AUDIO})
		TARGET_LINK_LIBRARIES(LL_Allegro5 ${ALLEGRO_LIBRARY_COLOR})
		TARGET_LINK_LIBRARIES(LL_Allegro5 ${ALLEGRO_LIBRARY_DIALOG})
		TARGET_LINK_LIBRARIES(LL_Allegro5 ${ALLEGRO_LIBRARY_FONT})
		TARGET_LINK_LIBRARIES(LL_Allegro5 ${ALLEGRO_LIBRARY_IMAGE})
		TARGET_LINK_LIBRARIES(LL_Allegro5 ${ALLEGRO_LIBRARY_MAIN})
		TARGET_LINK_LIBRARIES(LL_Allegro5 ${ALLEGRO_LIBRARY_MEMFILE})
		TARGET_LINK_LIBRARIES(LL_Allegro5 ${ALLEGRO_LIBRARY_PHYSFS})
		TARGET_LINK_LIBRARIES(LL_Allegro5 ${ALLEGRO_LIBRARY_PRIMITIVES})
		TARGET_LINK_LIBRARIES(LL_Allegro5 ${ALLEGRO_LIBRARY_TTF})
		TARGET_LINK_LIBRARIES(LL_Allegro5 ${ALLEGRO_LIBRARY_VIDEO})
	endif (NOT ALLEGROMONO_FOUND)
	SET_PROPERTY(TARGET LL_Allegro5 PROPERTY SOVERSION 2.0)
	INSTALL(TARGETS LL_Allegro5 RUNTIME DESTINATION "bin" LIBRARY DESTINATION "lib")
endif(INSTALL_ALLEGRO)

INSTALL(DIRECTORY "include/LexRisLogic" DESTINATION "include")

#Uninstall Target
configure_file(
    "${CMAKE_CURRENT_SOURCE_DIR}/cmake/UninstallLL.cmake.in"
    "${CMAKE_CURRENT_BINARY_DIR}/cmake/UninstallLL.cmake"
    IMMEDIATE @ONLY)

add_custom_target(uninstall COMMAND ${CMAKE_COMMAND} -P ${CMAKE_CURRENT_BINARY_DIR}/cmake/UninstallLL.cmake)
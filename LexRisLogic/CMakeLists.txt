PROJECT(LexRisLogic CXX)
CMAKE_MINIMUM_REQUIRED(VERSION 3.1)

set(CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)

SET(CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/cmake/")
if (UNIX AND NOT WIN32)
	if (CMAKE_SIZEOF_VOID_P MATCHES "8")
		SET(architecture_found_64 "-- x86_64 founded")
		MESSAGE(${architecture_found_64})
		SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -m64") 
	endif (CMAKE_SIZEOF_VOID_P MATCHES "8")
endif (UNIX AND NOT WIN32)

FIND_PACKAGE(ENet REQUIRED)

#LL Library
	FILE(GLOB LL_SRC 
		"src/*.cpp"
	)
	ADD_LIBRARY(LL SHARED ${LL_SRC})
	SET_PROPERTY(TARGET LL PROPERTY SOVERSION 2.0)

#LL_MathStructure Library
	FILE(GLOB LL_MATHSTRUCTURE_SRC
		"src/MathStructures/*.cpp"
	)
	ADD_LIBRARY(LL_MathStructure SHARED ${LL_MATHSTRUCTURE_SRC})
	SET_PROPERTY(TARGET LL_MathStructure PROPERTY SOVERSION 2.0)

#LL_SparseMatrix Library
	FILE(GLOB LL_SPARSEMATRIX_SRC
		"src/DataStructures/SparseMatrix.cpp"
	)
	ADD_LIBRARY(LL_SparseMatrix SHARED ${LL_SPARSEMATRIX_SRC})
	SET_PROPERTY(TARGET LL_SparseMatrix PROPERTY SOVERSION 2.0)

#LL_RTree Library
	FILE(GLOB LL_RTREE_SRC
		"src/DataStructures/RTree.cpp"
		"src/MathStructures/Point.cpp"
	)
	ADD_LIBRARY(LL_RTree SHARED ${LL_RTREE_SRC})
	SET_PROPERTY(TARGET LL_RTree PROPERTY SOVERSION 2.0)

#LL_ENet Library
	FILE(GLOB LL_ENET_SRC
		"src/ENet/*.cpp"
	)
	ADD_LIBRARY(LL_ENet SHARED ${LL_ENET_SRC})
	TARGET_INCLUDE_DIRECTORIES(LL_ENet PUBLIC ${ENET_INCLUDE_DIRS})
	TARGET_LINK_LIBRARIES(LL_ENet ${ENET_LIBRARIES})
	SET_PROPERTY(TARGET LL_ENet PROPERTY SOVERSION 2.0)

#LL_irrKlang Library

#LL_Allegro5 Library
